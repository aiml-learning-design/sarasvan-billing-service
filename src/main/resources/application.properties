# ==========================
# ? Database Configuration
# ==========================

# H2 in-memory database (auto-clears on app restart)
spring.datasource.url=jdbc:h2:mem:billingdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Enable H2 Web Console for in-browser access (http://localhost:8087/h2-console)
spring.h2.console.enabled=true

# ==========================
# ? JPA & Hibernate
# ==========================

# Automatically create/update DB schema based on entity classes
spring.jpa.hibernate.ddl-auto=update

# Show SQL queries in console (for debugging)
spring.jpa.show-sql=true

# Format SQL queries for readability (optional)
spring.jpa.properties.hibernate.format_sql=true

# ==========================
# ? Server Configuration
# ==========================

# Custom port (default is 8080)
server.port=8087

# Enable debug logging for Spring Boot
# This prints more logs including request mapping info, bean registration, etc.
debug=true

# ==========================
# ? Swagger / SpringDoc OpenAPI
# ==========================

# Path to OpenAPI documentation (e.g., http://localhost:8087/v3/api-docs)
springdoc.api-docs.path=/v3/api-docs

# Swagger UI path (e.g., http://localhost:8087/swagger-ui.html)
springdoc.swagger-ui.path=/swagger-ui.html

# ==========================
# ? JWT Configuration
# ==========================

# Secret key used for signing the JWT
# ?? Should be at least 256 bits (32+ chars); never hardcode in production!
jwt.secret=Ur03zrPvVhN16W7OdK9hN/g/pKQdyrdEvE72pKqHDEs=

# Expiration time in milliseconds (e.g., 86400000 = 1 day)
jwt.expiration=86400000

# ==========================
# ? Google Client
# ==========================

spring.security.oauth2.client.registration.google.client-id=your-google-client-id.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=your-google-client-secret
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

## http://localhost:8087/login/oauth2/code/google